public boolean reserveRoom(RoomType rt, Date start, Date end, int guestId){
        //determine if there is an available room of type rt
        //you can use the getAvailableRoom() function

        //if null is returned from getAvailableRoom(), no room was available, and false
        //should be returned from this method

        //if a room is returned from getAvailableRoom(), create a reservation, and associate it
        //with the guest and the room
        //true should be returned from this method.

        boolean reserveSuccessful = false;

        for(int i = 0; i < roomTypes.size(); i++){

            if(roomTypes.get(i) == rt){

                //if there's a room to reserve
                if( (roomTypes.get(i).getAvailableRoom(start, end)) != null){
                    reserveSuccessful = true;

                    //create new reservation
                    Reservation newReservation = new Reservation(start, end,
                            (roomTypes.get(i).getAvailableRoom(start, end))); //add isActive?

                    //associate new reservation with room
                    (roomTypes.get(i).getAvailableRoom(start, end)).addReservation(newReservation);

                    //associate reservation with guest
                    for(int j = 0; j < guestList.size(); j++){
                        if(guestList.get(j).getUserID() == guestId){
                            guestList.get(j).guestsReservations.add(newReservation);
                        }
                    }
                }
            }
        }

        return reserveSuccessful;
    }
